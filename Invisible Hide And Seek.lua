local function b64decode(data)
	local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	data = string.gsub(data, '[^' .. b .. '=]', '')
	return (data:gsub('.', function(x)
		if (x == '=') then return '' end
		local r, f = '', (b:find(x) - 1)
		for i = 6, 1, -1 do
			r = r .. (f % 2 ^ i - f % 2 ^ (i - 1) > 0 and '1' or '0')
		end
		return r
	end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
		if (#x ~= 8) then return '' end
		local c = 0
		for i = 1, 8 do
			c = c + (x:sub(i, i) == '1' and 2 ^ (8 - i) or 0)
		end
		return string.char(c)
	end))
end

local function xor_str(str, key)
	local res = {}
	for i = 1, #str do
		local c = string.byte(str, i)
		local k = string.byte(key, (i - 1) % #key + 1)
		res[i] = string.char(bit32.bxor(c, k))
	end
	return table.concat(res)
end

local key = "SecretXorKey42"
local encoded = ""

loadstring(xor_str(b64decode(encoded), key))()
