-- Remover Malicious Letter and Bad word Letters For safety 

print(" Use this Good Activity! ")

local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local mouse = player:GetMouse()

local ScreenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 240, 0, 180)
Frame.Position = UDim2.new(0, 100, 0, 100)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true

local UICorner = Instance.new("UICorner", Frame)
UICorner.CornerRadius = UDim.new(0, 8)

local ScrollingFrame = Instance.new("ScrollingFrame", Frame)
ScrollingFrame.Size = UDim2.new(1, -20, 1, -60)
ScrollingFrame.Position = UDim2.new(0, 10, 0, 10)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 2, 0)
ScrollingFrame.ScrollBarThickness = 6
ScrollingFrame.BackgroundTransparency = 1

local TextBox = Instance.new("TextBox", ScrollingFrame)
TextBox.Size = UDim2.new(1, 0, 0, 500)
TextBox.Text = "-- Put Script Here..."
TextBox.TextWrapped = true
TextBox.TextXAlignment = Enum.TextXAlignment.Left
TextBox.TextYAlignment = Enum.TextYAlignment.Top
TextBox.Font = Enum.Font.Code
TextBox.TextSize = 14
TextBox.BackgroundTransparency = 1
TextBox.TextColor3 = Color3.new(1, 1, 1)
TextBox.ClearTextOnFocus = false
TextBox.MultiLine = true

local RemoveBtn = Instance.new("TextButton", Frame)
RemoveBtn.Size = UDim2.new(0.5, -15, 0, 30)
RemoveBtn.Position = UDim2.new(0, 10, 1, -40)
RemoveBtn.Text = "Remove AI Headers"
RemoveBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
RemoveBtn.TextColor3 = Color3.new(1,1,1)
RemoveBtn.Font = Enum.Font.SourceSans
RemoveBtn.TextSize = 14
Instance.new("UICorner", RemoveBtn).CornerRadius = UDim.new(0, 6)

local CopyBtn = Instance.new("TextButton", Frame)
CopyBtn.Size = UDim2.new(0.5, -15, 0, 30)
CopyBtn.Position = UDim2.new(0.5, 5, 1, -40)
CopyBtn.Text = "Copy Results"
CopyBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
CopyBtn.TextColor3 = Color3.new(1,1,1)
CopyBtn.Font = Enum.Font.SourceSans
CopyBtn.TextSize = 14
Instance.new("UICorner", CopyBtn).CornerRadius = UDim.new(0, 6)

local function isAIHeader(line)
    -- Trim whitespace and convert to lowercase for matching
    local trimmed = line:gsub("^%s*", ""):gsub("%s*$", ""):lower()
   
    if trimmed == "" then return false end
    
    local patterns = {
        "^%-%- .* by chatgpt", "^%-%- .* by claude", "^%-%- .* by ai", "^%-%- .* by gpt",
        "^%-%- generated by", "^%-%- created by", "^%-%- made by.*ai", "^%-%- powered by",
        "^%-%- assisted by", "^%-%- developed by", "^%-%- coded by", "^%-%- written by.*ai",
        
        "^%-%- compact", "^%-%- small", "^%-%- very small", "^%-%- minimal", "^%-%- simple",
        "^%-%- basic", "^%-%- lightweight", "^%-%- streamlined", "^%-%- efficient", "^%-%- quick",
        "^%-%- tiny", "^%-%- short", "^%-%- brief", "^%-%- concise", "^%-%- clean",
        
        "^%-%- optimized", "^%-%- improved", "^%-%- enhanced", "^%-%- updated", "^%-%- modified",
        "^%-%- revised", "^%-%- fixed", "^%-%- corrected", "^%-%- cleaned", "^%-%- refined",
        "^%-%- polished", "^%-%- perfected", "^%-%- advanced", "^%-%- professional", "^%-%- premium",
        "^%-%- high%-quality", "^%-%- top%-tier", "^%-%- robust", "^%-%- stable", "^%-%- reliable",
       
        "^%-%- here's", "^%-%- here is", "^%-%- this is", "^%-%- this script", "^%-%- below is",
        "^%-%- the following", "^%-%- i've created", "^%-%- i have created", "^%-%- i made",
        "^%-%- let me", "^%-%- i'll", "^%-%- i will", "^%-%- as requested", "^%-%- per your request",
        "^%-%- here you go", "^%-%- there you go", "^%-%- voila", "^%-%- ta%-da",
        
        "^%-%- roblox script", "^%-%- lua script", "^%-%- game script", "^%-%- exploit script",
        "^%-%- hack script", "^%-%- cheat script", "^%-%- gui script", "^%-%- auto script",
        "^%-%- farming script", "^%-%- speed script", "^%-%- fly script", "^%-%- esp script",
        
        -- Generic AI patterns
        "^%-%- auto%-generated", "^%-%- automatically generated", "^%-%- ai generated",
        "^%-%- machine generated", "^%-%- bot generated", "^%-%- programmatically created",

        "^%-%- note:", "^%-%- important:", "^%-%- disclaimer:", "^%-%- warning:", "^%-%- remember:",
        "^%-%- make sure", "^%-%- ensure that", "^%-%- please note", "^%-%- keep in mind",
        "^%-%- don't forget", "^%-%- be sure to", "^%-%- you should", "^%-%- you need to",
        "^%-%- you can", "^%-%- you may", "^%-%- feel free", "^%-%- simply",
       
        "^%-%- this will", "^%-%- this should", "^%-%- this allows", "^%-%- this enables",
        "^%-%- this creates", "^%-%- this provides", "^%-%- this gives", "^%-%- this makes",
        "^%-%- the script", "^%-%- the code", "^%-%- the function", "^%-%- the gui",
        
        "^%-%- step %d+", "^%-%- first", "^%-%- next", "^%-%- then", "^%-%- finally",
        "^%-%- to use", "^%-%- how to", "^%-%- instructions", "^%-%- usage",
        
        "^%-%- features:", "^%-%- includes:", "^%-%- contains:", "^%-%- has:",
        "^%-%- supports:", "^%-%- offers:", "^%-%- provides:", "^%-%- comes with:",
        
        "^%-%- version", "^%-%- v%d", "^%-%- update", "^%-%- patch", "^%-%- release",
        "^%-%- build", "^%-%- revision", "^%-%- iteration", "^%-%- beta", "^%-%- alpha",
        
        "^%-%- fast", "^%-%- faster", "^%-%- fastest", "^%-%- speed", "^%-%- performance",
        "^%-%- lag%-free", "^%-%- smooth", "^%-%- instant", "^%-%- responsive",
        
        "^%-%- obviously", "^%-%- clearly", "^%-%- simply put", "^%-%- in essence",
        "^%-%- basically", "^%-%- essentially", "^%-%- fundamentally", "^%-%- ultimately",
        
        "^%-%- hope this helps", "^%-%- enjoy", "^%-%- happy coding", "^%-%- good luck",
        "^%-%- have fun", "^%-%- cheers", "^%-%- best regards", "^%-%- sincerely"
    }
   
    for _, pattern in ipairs(patterns) do
        if trimmed:match(pattern) then
            return true
        end
    end
    
    if trimmed:match("^%-%- %a+ version") or 
       trimmed:match("^%-%- %a+ %a+ script") or
       trimmed:match("^%-%- %a+ and %a+") or
       trimmed:match("^%-%- %a+ly %a+") or  -- "simply optimized", "carefully crafted"
       trimmed:match("^%-%- %a+ %a+ %a+ script") or  -- "simple roblox exploit script" 
       trimmed:match("^%-%- %d+%% %a+") or  -- "100% working", "50% faster"
       trimmed:match("^%-%- no %a+") or  -- "no ban", "no detection"
       trimmed:match("^%-%- anti %a+") or  -- "anti ban", "anti detection"
       trimmed:match("^%-%- %a+ proof") then  -- "ban proof", "detection proof"
        return true
    end
    
    return false
end

local function containsMaliciousContent(text)
    local lowered = text:lower()
    
    local filipinoBadWords = {
        "gago", "tangina", "tang ina", "putangina", "putang ina", "puta", "bobo", 
        "tanga", "tarantado", "ulol", "sira", "bwisit", "kingina", "pakyu",
        "hayop", "animal", "peste", "loko", "baliw", "shunga", "hudas",
        "letche", "leche", "kupal", "hinayupak"
    }
    
    local englishBadWords = {
        "fuck", "fucking", "shit", "bitch", "asshole", "bastard", "damn",
        "hell", "crap", "dick", "cock", "pussy", "whore", "slut", "nigga",
        "nigger", "faggot", "retard", "stupid", "idiot", "moron", "dumbass"
    }
    
    -- Check for Filipino bad words
    for _, word in ipairs(filipinoBadWords) do
        if lowered:find(word) then
            return true
        end
    end
    
    for _, word in ipairs(englishBadWords) do
        if lowered:find(word) then
            return true
        end
    end
    
    local maliciousPatterns = {
        "hack", "exploit", "cheat", "steal", "destroy", "delete", "virus",
        "malware", "trojan", "keylog", "phish", "scam", "illegal", "crack",
        "pirate", "warez", "ddos", "dos attack", "spam", "flood"
    }
    
    for _, pattern in ipairs(maliciousPatterns) do
        if lowered:find(pattern) then
            return true
        end
    end
    
    return false
end

RemoveBtn.MouseButton1Click:Connect(function()
    local original = TextBox.Text
    
    if containsMaliciousContent(original) then
        StarterGui:SetCore("SendNotification", {
            Title = "⚠️ Malicious Content Detected",
            Text = "Please remove offensive/malicious content first before using this tool.",
            Duration = 5
        })
        return
    end
    
    local lines = {}
    
    for line in original:gmatch("[^\r\n]*") do
        table.insert(lines, line)
    end
    
    local cleanedLines = {}
    local removedCount = 0
    
    for _, line in ipairs(lines) do
        if not isAIHeader(line) then
            table.insert(cleanedLines, line)
        else
            removedCount = removedCount + 1
        end
    end
    
    TextBox.Text = table.concat(cleanedLines, "\n")
    
    StarterGui:SetCore("SendNotification", {
        Title = "✅ AI Headers Removed",
        Text = "Removed " .. removedCount .. " AI header line(s)",
        Duration = 3
    })
end)

CopyBtn.MouseButton1Click:Connect(function()
    local success = pcall(function()
        setclipboard(TextBox.Text)
    end)
    if success then
        StarterGui:SetCore("SendNotification", {
            Title = "Copied",
            Text = "Script copied to clipboard!",
            Duration = 2
        })
    else
        warn("Clipboard failed. Run in executor with clipboard permissions.")
    end
end)
